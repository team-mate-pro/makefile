phpcs: ### Run PHPCS with configured standard and exclusions (alias: cs)
	$(docker-compose) exec app composer phpcs

phpcs_check: ### Check code styling with PHPCS (alias: csc)
	$(docker-compose) exec app composer phpcs

phpcs_fix: ### Auto-fix code styling with PHPCBF (alias: csf)
	$(docker-compose) exec app composer phpcs:fix

phpcbf: ### Run PHP Code Beautifier and Fixer (alias: cbf)
	$(docker-compose) exec app composer phpcs:fix

phpcs_file: ### Check specific file (usage: make phpcs_file FILE=src/Entity/User.php) (alias: csfile)
	@if [ -z "$(FILE)" ]; then echo "Usage: make phpcs_file FILE=src/Entity/User.php"; exit 1; fi
	$(docker-compose) exec app php ./vendor/bin/phpcs --standard=phpcs.xml --exclude=Generic.Files.LineLength $(FILE)

phpcs_fix_file: ### Fix specific file (usage: make phpcs_fix_file FILE=src/Entity/User.php) (alias: csffile)
	@if [ -z "$(FILE)" ]; then echo "Usage: make phpcs_fix_file FILE=src/Entity/User.php"; exit 1; fi
	$(docker-compose) exec app php ./vendor/bin/phpcbf --standard=phpcs.xml --exclude=Generic.Files.LineLength $(FILE)

phpcs_dir: ### Check specific directory (usage: make phpcs_dir DIR=src/Service) (alias: csdir)
	@if [ -z "$(DIR)" ]; then echo "Usage: make phpcs_dir DIR=src/Service"; exit 1; fi
	$(docker-compose) exec app php ./vendor/bin/phpcs --standard=phpcs.xml --exclude=Generic.Files.LineLength $(DIR)

phpcs_fix_dir: ### Fix specific directory (usage: make phpcs_fix_dir DIR=src/Service) (alias: csfdir)
	@if [ -z "$(DIR)" ]; then echo "Usage: make phpcs_fix_dir DIR=src/Service"; exit 1; fi
	$(docker-compose) exec app php ./vendor/bin/phpcbf --standard=phpcs.xml --exclude=Generic.Files.LineLength $(DIR)

phpcs_dry_run: ### Dry run - show what would be fixed without fixing (alias: csdry)
	$(docker-compose) exec app composer phpcs:fix -- --dry-run

phpcs_diff: ### Show diff of fixes that would be applied (alias: csdiff)
	$(docker-compose) exec app composer phpcs:fix -- --diff

phpcs_parallel: ### Run in parallel (usage: make phpcs_parallel PROCESSES=4) (alias: cspar)
	@if [ -z "$(PROCESSES)" ]; then \
		$(docker-compose) exec app composer phpcs -- --parallel=1; \
	else \
		$(docker-compose) exec app composer phpcs -- --parallel=$(PROCESSES); \
	fi

phpcs_ci: ### Run for CI/CD (no colors, checkstyle report) (alias: csci)
	$(docker-compose) exec app composer phpcs -- --no-colors --report=checkstyle

phpcs_config_show: ### Show PHPCS configuration settings (alias: csconf)
	$(docker-compose) exec app vendor/bin/phpcs --config-show

phpcs_list_standards: ### List installed coding standards (alias: cslstd)
	$(docker-compose) exec app vendor/bin/phpcs -i

phpcs_explain: ### Explain coding standard rules (alias: csexp)
	$(docker-compose) exec app composer phpcs -- --explain

# Aliases
cs: phpcs
csc: phpcs_check
csf: phpcs_fix
cbf: phpcbf
csfile: phpcs_file
csffile: phpcs_fix_file
csdir: phpcs_dir
csfdir: phpcs_fix_dir
csdry: phpcs_dry_run
csdiff: phpcs_diff
cspar: phpcs_parallel
csci: phpcs_ci
csconf: phpcs_config_show
cslstd: phpcs_list_standards
csexp: phpcs_explain
